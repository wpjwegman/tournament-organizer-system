name: 🐳 Containerized Documentation Quality Control

on:
  pull_request:
    branches: [master, develop]
    paths:
      - 'documents/**/*.md'
      - 'documents/Containerfile'
      - 'documents/compose.yml'
      - 'documents/scripts/**'
  push:
    branches: [master, develop]
    paths:
      - 'documents/**/*.md'
      - 'documents/Containerfile'
      - 'documents/compose.yml'
      - 'documents/scripts/**'

jobs:
  containerized-quality-checks:
    name: 🔍 Containerized Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better analysis

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🏗️ Build Quality Control Container
      run: |
        cd documents
        docker build -t localhost/docs-quality:latest -f Containerfile .

    - name: 🔍 Run Container-Based Quality Validation
      run: |
        cd documents
        # Use the exact same validation approach as our local container system    
        # The key difference: we COPY the files but stay in /workspace/documents working directory
        docker run --rm -v "$PWD:/workspace" -w /workspace/documents localhost/docs-quality:latest bash -c "
          echo '🔍 Setting up Python environment...' &&
          rm -rf /tmp/project-documents &&
          cp -r /workspace/documents /tmp/project-documents &&
          cd /tmp/project-documents &&
          export PATH=\"/usr/local/bin:/usr/bin:/bin:\$PATH\" &&
          /usr/local/bin/uv sync &&
          echo '' &&
          echo '🔒 Security scanning with Bandit...' &&
          (/usr/local/bin/uv run bandit -r scripts/ --configfile pyproject.toml -f screen || echo 'Security issues found - review required') &&
          echo '' &&
          echo '🎯 Code quality analysis with Ruff...' &&
          (/usr/local/bin/uv run ruff check scripts/ || echo 'Code quality issues found - review required') &&
          echo '' &&
          echo '📚 Documentation validation with markdownlint-cli2...' &&
          echo 'Markdown validation skipped (requires Node.js setup in container)' &&
          echo '' &&
          echo '🏆 Running quality dashboard...' &&
          mkdir -p /tmp/project-documents/reports &&
          (/usr/local/bin/uv run python scripts/validation/quality_dashboard.py --project-root /tmp/project-documents --quiet || echo 'Quality dashboard completed with warnings') &&
          echo '✅ Quality validation checks completed.'
        "

    - name: 🏗️ Test Documentation Build
      run: |
        cd documents
        docker run --rm -v "$PWD:/workspace" -w /workspace/documents localhost/docs-quality:latest bash -c "
          uv run mkdocs build --strict --clean
        "

    - name: 📋 Upload Quality Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quality-reports
        path: |
          documents/repository_lint_report_*.md
          documents/scripts/reports/*.md
        retention-days: 7

    - name: 🌐 Upload Built Documentation
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: documentation-site
        path: documents/site/
        retention-days: 7
