# Tournament Organizer Documentation - Podman Compose
# Professional containerized development with Podman

services:
  # Development environment
  docs-dev:
    build:
      context: .
      dockerfile: Containerfile
      target: development
    volumes:
      - .:/home/tournament:z
      - uv-cache:/home/tournament/.cache/uv:z
    working_dir: /home/tournament
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true

  # Development server
  docs-serve:
    build:
      context: .
      dockerfile: Containerfile
      target: development
    volumes:
      - .:/home/tournament:z
    working_dir: /home/tournament
    ports:
      - "8001:8000"
    command: ["uv", "run", "mkdocs", "serve", "--dev-addr", "0.0.0.0:8000"]

  # Quality assurance
  docs-qa:
    build:
      context: .
      dockerfile: Containerfile
      target: development
    volumes:
      - .:/home/tournament:z
    working_dir: /home/tournament
    command: |
      bash -c "
        echo 'üîç Running quality checks...'
        markdownlint-cli2 '**/*.md'
        uv run pre-commit run --all-files
        for domain in docs/domains/*/; do
          if [ -d \$$domain ]; then
            domain_name=\$$(basename \$$domain)
            echo \"Checking \$$domain_name domain...\"
            uv run python scripts/linting/domain_linter.py \$$domain_name --check-only --threshold 0
          fi
        done
        uv run python scripts/validation/check_nav_orphans.py
        uv run python scripts/validation/check_no_frontmatter_title.py
        uv run mkdocs build --strict
        echo '‚úÖ Quality checks completed!'
      "

  # Production server
  docs-production:
    build:
      context: .
      dockerfile: Containerfile
      target: serve
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  uv-cache:
