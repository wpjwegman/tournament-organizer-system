# validate-fallback.ps1 - Local validation when container has issues
# This script runs quality checks locally when the container environment has problems

$ErrorActionPreference = "Stop"

Write-Host "üöÄ Starting local validation workflow..." -ForegroundColor Green
Write-Host "   (Using local environment as fallback)" -ForegroundColor Yellow

$ProjectRoot = (Resolve-Path "$PSScriptRoot\..\..\..").Path
$DocumentsPath = Join-Path $ProjectRoot "documents"

# Change to documents directory
Push-Location $DocumentsPath

try {
    Write-Host ""
    Write-Host "üîí Security scanning with Bandit..." -ForegroundColor Cyan
    .venv\Scripts\activate
    bandit -r scripts/ --configfile pyproject.toml -f screen
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Security scan passed" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Security issues found - review required" -ForegroundColor Yellow
    }

    Write-Host ""
    Write-Host "üéØ Code quality analysis with Ruff..." -ForegroundColor Cyan
    ruff check scripts/
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Code quality passed" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Code quality issues found - review required" -ForegroundColor Yellow
    }

    Write-Host ""
    Write-Host "üìö Documentation validation..." -ForegroundColor Cyan
    markdownlint-cli2 "docs/**/*.md"
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Documentation validation passed" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Documentation issues found - review required" -ForegroundColor Yellow
    }

    Write-Host ""
    Write-Host "üèÜ Running quality dashboard..." -ForegroundColor Cyan
    python scripts/validation/quality_dashboard.py --quiet
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Quality dashboard completed" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Quality dashboard completed with warnings" -ForegroundColor Yellow
    }

    Write-Host ""
    Write-Host "‚úÖ Local validation workflow completed!" -ForegroundColor Green

} catch {
    Write-Host "‚ùå Validation failed: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
} finally {
    Pop-Location
}
